# edit <#TargetTaxa> and run
#   shex-validate -x example.shex -d example2.ttl -m '{ FOCUS rdfs:label _ }@start' --grep --list
# from github clone:
#   shex.js/packages/shex-cli/bin/validate...

BASE <http://purl.obolibrary.org/obo/toy_uberon.owl>

PREFIX : <http://purl.obolibrary.org/obo/toy_uberon.owl#>
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX obo: <http://purl.obolibrary.org/obo/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xml: <http://www.w3.org/XML/1998/namespace>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX terms: <http://purl.org/dc/terms/>
PREFIX oboInOwl: <http://www.geneontology.org/formats/oboInOwl#>


start= EXTRA rdfs:subClassOf {
  rdfs:subClassOf @<#Closure-ConnectedAnat>
}
AND NOT @<#DroppedOut>
AND NOT EXTRA rdfs:subClassOf {
  rdfs:subClassOf {
    owl:someValuesFrom @<#DroppedOut>
  }
}

<#TargetTaxa> [obo:Vertebrata] OR {
  ^rdfs:subClassOf @<#TargetTaxa>
}

<#DroppedOut> {
  obo:neverInTaxon @<#TargetTaxa>
} OR { # EXTRA rdfs:subClassOf -- stratified negation
  rdfs:subClassOf @<#DroppedOut>
}

<#Closure-ConnectedAnat> [obo:ConnectedAnatomicalStructure] OR {
  rdfs:subClassOf @<#Closure-ConnectedAnat>
}


# Knobs and buttons
<#_EmptyShape> @<#SimpleEyeWithMultipleLenses> AND {
#   obo:inTaxon @<#Chordata> + ;
#   obo:inTaxon NOT @<#Chordata> *
}


# Shape hierarchy
<#ConnectedAnatomicalStructure> {
}
// oboInOwl:id "CARO:0000003"
// rdfs:label "connected anatomical structure"


<#Hemichordata> {
  rdfs:subClassOf [obo:Deuterostomia] ;
  obo:inTaxon [obo:Hemichordata] ;
#  obo:inTaxon [obo:Echinodermata obo:Chordata] {0} ;
}
# AND NOT { obo:inTaxon [obo:Echinodermata] }
// oboInOwl:id "NCBITaxon:10219"
// rdfs:label "Hemichordata"


<#Deuterostomia> {
}
// oboInOwl:id "NCBITaxon:33511"
// rdfs:label "Deuterostomia"


<#Echinodermata> {
  rdfs:subClassOf [obo:Deuterostomia] ;
}
// oboInOwl:id "NCBITaxon:7586"
// rdfs:label "Echinodermata"


<#Chordata> {
  rdfs:subClassOf [obo:Deuterostomia] ;
}
// oboInOwl:id "NCBITaxon:7711"
// rdfs:label "Chordata"


<#Vertebrata> {
  rdfs:subClassOf [obo:Chordata] ;
}
// oboInOwl:id "NCBITaxon:7742"
// rdfs:label "Vertebrata"


<#Camera-TypeEye> {
  rdfs:subClassOf [obo:SimpleEye] ;
  obo:developsFrom @<#NeuralPlate> + ;
  obo:developsFrom NOT @<#NeuralPlate> * ;
}
// oboInOwl:id "UBERON:0000019"
// rdfs:label "camera-type eye"


<#SimpleEye> {
  rdfs:subClassOf [obo:ConnectedAnatomicalStructure] ;
}
// oboInOwl:id "UBERON:0000047"
// rdfs:label "simple eye"


<#SimpleEyeWithMultipleLenses> {
  rdfs:subClassOf [obo:SimpleEye] ;
  obo:neverInTaxon obo:Chordata ;
}
// oboInOwl:id "UBERON:0000050"
// rdfs:label "simple eye with multiple lenses"


<#NeuralPlate> {
  rdfs:subClassOf [obo:ConnectedAnatomicalStructure] ;
  obo:onlyInTaxon @<#Chordata> + ;
  obo:onlyInTaxon NOT @<#Chordata> * ;
}
// oboInOwl:id "UBERON:0003075"
// rdfs:label "neural plate"


<#FakeLensWithGcis> {
  rdfs:subClassOf [obo:ConnectedAnatomicalStructure] ;
}
// oboInOwl:id "UBERON:9999998"
// rdfs:label "fake lens with GCIs"


<#FakeLens> {
  rdfs:subClassOf [obo:ConnectedAnatomicalStructure] ;
  obo:partOf @<#SimpleEyeWithMultipleLenses> + ;
  obo:partOf NOT @<#SimpleEyeWithMultipleLenses> * ;
}
// oboInOwl:id "UBERON:9999999"
// rdfs:label "fake lens"


#################################################################
#    General axioms
#################################################################

# [ owl:intersectionOf
#   @<#FakeLensWithGcis> AND EXTRA obo:partOf { obo:partOf @<#Hemichordata> + }
#   EXTRA obo:partOf { obo:partOf @<#SimpleEye> }
# ] .
# 
# 
# [ owl:intersectionOf
#   @<#FakeLensWithGcis> AND EXTRA obo:partOf { obo:partOf @<#Echinodermata> + }
#   ) ;
#   rdf:type owl:Class ;
#   rdfs:subClassOf
#     [ owl:onProperty obo:partOf ; owl:someValuesFrom obo:SimpleEyeWithMultipleLenses ]
# ] .
# 
# 
# [ rdf:type owl:AllDisjointClasses ;
#   owl:members (
#     obo:Hemichordata
#     obo:Echinodermata
#     obo:Chordata
#   )
# ] .
# 
# 
# [ rdf:type owl:AllDisjointClasses ;
#   owl:members (
#     [ owl:onProperty obo:inTaxon ; owl:someValuesFrom obo:Hemichordata ]
#     [ owl:onProperty obo:inTaxon ; owl:someValuesFrom obo:Echinodermata ]
#     [ owl:onProperty obo:inTaxon ; owl:someValuesFrom obo:Chordata ]
#   )
# ] .


###  Generated by the OWL API (version 4.5.9.2019-02-01T07:24:44Z) https://github.com/owlcs/owlapi
